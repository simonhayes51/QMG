"use client";import {useEffect,useRef} from 'react';export default function BackgroundRoundels(){const ref=useRef(null);useEffect(()=>{const canvas=ref.current;const ctx=canvas.getContext('2d');let w=canvas.width=window.innerWidth;let h=canvas.height=window.innerHeight;const rs=Array.from({length:12}).map(()=>({x:Math.random()*w,y:Math.random()*h,r:30+Math.random()*80,dx:(-.3+Math.random()*.6),dy:(-.2+Math.random()*.4),a:Math.random()*Math.PI*2,s:.002+Math.random()*.004}));const draw=()=>{ctx.clearRect(0,0,w,h);rs.forEach(o=>{o.a+=o.s;o.x+=o.dx;o.y+=o.dy;if(o.x<-100)o.x=w+100;if(o.x>w+100)o.x=-100;if(o.y<-100)o.y=h+100;if(o.y>h+100)o.y=-100;const r=o.r*(1+.08*Math.sin(o.a));ctx.beginPath();ctx.arc(o.x,o.y,r,0,Math.PI*2);ctx.fillStyle='rgba(10,31,68,.25)';ctx.fill();ctx.beginPath();ctx.arc(o.x,o.y,r*.6,0,Math.PI*2);ctx.fillStyle='rgba(255,255,255,.35)';ctx.fill();ctx.beginPath();ctx.arc(o.x,o.y,r*.3,0,Math.PI*2);ctx.fillStyle='rgba(200,16,46,.35)';ctx.fill()});req=requestAnimationFrame(draw)};let req=requestAnimationFrame(draw);const onResize=()=>{w=canvas.width=window.innerWidth;h=canvas.height=window.innerHeight};window.addEventListener('resize',onResize);return()=>{cancelAnimationFrame(req);window.removeEventListener('resize',onResize)}},[]);return <canvas ref={ref} className='fixed inset-0 -z-10' aria-hidden/>;}